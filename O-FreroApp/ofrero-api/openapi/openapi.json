{
  "openapi": "3.0.3",
  "info": {
    "title": "API O'Frero",
    "version": "0.2.0",
    "description": "API MVP pour la pizzeria O’Frero (authentification, produits, catégories, panier, commandes, checkout Stripe, santé du service) avec pagination/filtre/tri sur les produits."
  },
  "servers": [
    { "url": "http://localhost:5050", "description": "Environnement local" }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Vérification de l’état du service",
        "responses": {
          "200": {
            "description": "Le service est opérationnel",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "ok": { "type": "boolean" }, "service": { "type": "string" } }
                },
                "examples": { "ok": { "value": { "ok": true, "service": "ofrero-api" } } }
              }
            }
          }
        }
      }
    },

    "/auth/register": {
      "post": {
        "summary": "Inscription d’un nouvel utilisateur",
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RegisterInput" } } }
        },
        "responses": {
          "201": { "description": "Utilisateur créé", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PublicUser" } } } },
          "400": { "description": "Corps invalide" },
          "409": { "description": "E-mail déjà utilisée" }
        }
      }
    },

    "/auth/login": {
      "post": {
        "summary": "Connexion et obtention d’un jeton JWT",
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginInput" } } }
        },
        "responses": {
          "200": { "description": "Connexion réussie", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthToken" } } } },
          "400": { "description": "Corps invalide" },
          "401": { "description": "Identifiants incorrects" }
        }
      }
    },

    "/me": {
      "get": {
        "summary": "Obtenir le profil de l’utilisateur connecté",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Profil utilisateur", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PublicUserExtended" } } } },
          "401": { "description": "Non autorisé" }
        }
      }
    },

    "/admin/ping": {
      "get": {
        "summary": "Test admin (réservé aux admins)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "OK (admin)", "content": { "application/json": { "schema": { "type": "object", "properties": { "ok": { "type": "boolean" }, "area": { "type": "string" } } } } } },
          "401": { "description": "Non autorisé" },
          "403": { "description": "Réservé aux admins" }
        }
      }
    },

    "/categories": {
      "get": {
        "summary": "Lister les catégories",
        "responses": {
          "200": {
            "description": "Liste des catégories",
            "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Category" } } } }
          }
        }
      }
    },

    "/products": {
      "get": {
        "summary": "Lister les produits (pagination + filtre + tri)",
        "parameters": [
          { "in": "query", "name": "page", "schema": { "type": "integer", "minimum": 1, "default": 1 }, "description": "Numéro de page (>=1)" },
          { "in": "query", "name": "pageSize", "schema": { "type": "integer", "minimum": 1, "maximum": 100, "default": 12 }, "description": "Taille de page (1..100)" },
          { "in": "query", "name": "q", "schema": { "type": "string" }, "description": "Recherche texte (name contient, insensible à la casse)" },
          { "in": "query", "name": "categoryId", "schema": { "type": "string" }, "description": "Filtrer par catégorie (ID)" },
          { "in": "query", "name": "sort", "schema": { "type": "string", "enum": ["name", "priceAsc", "priceDesc", "createdDesc"], "default": "name" }, "description": "Critère de tri" }
        ],
        "responses": {
          "200": {
            "description": "Liste paginée de produits",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProductListResponse" } } }
          },
          "400": { "description": "Paramètres invalides" }
        }
      },
      "post": {
        "summary": "Créer un produit (admin)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NewProductInput" } } }
        },
        "responses": {
          "201": { "description": "Produit créé", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Product" } } } },
          "400": { "description": "Corps invalide" },
          "401": { "description": "Non autorisé" },
          "403": { "description": "Réservé aux admins" },
          "404": { "description": "Catégorie introuvable (si categoryId fourni)" }
        }
      }
    },

    "/products/{id}": {
      "get": {
        "summary": "Détails d’un produit",
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "Produit", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Product" } } } },
          "404": { "description": "Produit introuvable" }
        }
      },
      "patch": {
        "summary": "Mettre à jour un produit (admin)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProductInput" } } }
        },
        "responses": {
          "200": { "description": "Produit mis à jour", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Product" } } } },
          "400": { "description": "Corps invalide" },
          "401": { "description": "Non autorisé" },
          "403": { "description": "Réservé aux admins" },
          "404": { "description": "Produit ou catégorie introuvable" }
        }
      },
      "delete": {
        "summary": "Supprimer un produit (admin)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "Produit supprimé" },
          "401": { "description": "Non autorisé" },
          "403": { "description": "Réservé aux admins" },
          "404": { "description": "Produit introuvable" }
        }
      }
    },

    "/products/by-category/{id}": {
      "get": {
        "summary": "Lister les produits d’une catégorie (avec pagination/filtre/tri)",
        "parameters": [
          { "in": "path", "name": "id", "required": true, "schema": { "type": "string" } },
          { "in": "query", "name": "page", "schema": { "type": "integer", "minimum": 1, "default": 1 } },
          { "in": "query", "name": "pageSize", "schema": { "type": "integer", "minimum": 1, "maximum": 100, "default": 12 } },
          { "in": "query", "name": "q", "schema": { "type": "string" } },
          { "in": "query", "name": "sort", "schema": { "type": "string", "enum": ["name", "priceAsc", "priceDesc", "createdDesc"], "default": "name" } }
        ],
        "responses": {
          "200": {
            "description": "Liste paginée d’une catégorie",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": { "$ref": "#/components/schemas/Category" },
                    "data": { "type": "array", "items": { "$ref": "#/components/schemas/Product" } },
                    "meta": { "$ref": "#/components/schemas/Meta" }
                  }
                }
              }
            }
          },
          "400": { "description": "Paramètres invalides" },
          "404": { "description": "Catégorie introuvable" }
        }
      }
    },

    "/cart": {
      "get": {
        "summary": "Obtenir le panier de l’utilisateur connecté",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Panier", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Cart" } } } },
          "401": { "description": "Non autorisé" }
        }
      }
    },

    "/cart/items": {
      "post": {
        "summary": "Ajouter un article au panier",
        "security": [{ "bearerAuth": [] }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AddCartItemInput" } } } },
        "responses": {
          "201": { "description": "Panier à jour", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Cart" } } } },
          "400": { "description": "Requête invalide" },
          "401": { "description": "Non autorisé" },
          "404": { "description": "Produit introuvable" }
        }
      }
    },

    "/cart/items/{itemId}": {
      "patch": {
        "summary": "Modifier la quantité d’un article (0 = suppression)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "itemId", "required": true, "schema": { "type": "string" } }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateCartItemInput" } } } },
        "responses": {
          "200": { "description": "Panier à jour", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Cart" } } } },
          "400": { "description": "Requête invalide" },
          "401": { "description": "Non autorisé" },
          "404": { "description": "Article introuvable" }
        }
      },
      "delete": {
        "summary": "Supprimer un article du panier",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "itemId", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "Article supprimé + panier renvoyé" },
          "401": { "description": "Non autorisé" },
          "404": { "description": "Article introuvable" }
        }
      }
    },

    "/checkout/start": {
      "post": {
        "summary": "Démarrer le checkout (création commande + PaymentIntent)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CheckoutStartInput" } } } },
        "responses": {
          "200": { "description": "Checkout démarré", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CheckoutStartResponse" } } } },
          "400": { "description": "Panier vide ou corps invalide" },
          "401": { "description": "Non autorisé" }
        }
      }
    },

    "/checkout/webhook": {
      "post": {
        "summary": "Webhook Stripe (RAW)",
        "description": "Corps RAW requis. En dev, un JSON brut Postman est accepté. En prod, vérification de signature Stripe.",
        "responses": {
          "200": { "description": "Événement reçu" },
          "400": { "description": "Signature/payload invalide" }
        }
      }
    },

    "/orders": {
      "get": {
        "summary": "Lister les commandes de l’utilisateur connecté",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Liste des commandes", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Order" } } } } },
          "401": { "description": "Non autorisé" }
        }
      }
    },

    "/orders/{id}": {
      "get": {
        "summary": "Détail d’une commande (utilisateur connecté)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "Commande", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Order" } } } },
          "401": { "description": "Non autorisé" },
          "404": { "description": "Commande introuvable" }
        }
      }
    },

    "/orders/admin": {
      "get": {
        "summary": "Lister toutes les commandes (admin)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Liste des commandes (admin)", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/AdminOrder" } } } } },
          "401": { "description": "Non autorisé" },
          "403": { "description": "Réservé aux admins" }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" }
    },
    "schemas": {
      "Meta": {
        "type": "object",
        "properties": {
          "page": { "type": "integer", "example": 1 },
          "pageSize": { "type": "integer", "example": 12 },
          "total": { "type": "integer", "example": 42 },
          "totalPages": { "type": "integer", "example": 4 }
        }
      },

      "Category": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "c_pizza" },
          "name": { "type": "string", "example": "Pizza" }
        }
      },

      "Product": {
        "type": "object",
        "required": ["id", "name", "priceCents"],
        "properties": {
          "id": { "type": "string", "example": "p_abc123" },
          "name": { "type": "string", "example": "Pizza Pepperoni" },
          "priceCents": { "type": "integer", "example": 1100 },
          "description": { "type": "string", "nullable": true, "example": "Tomate, mozzarella, pepperoni" },
          "category": { "allOf": [{ "$ref": "#/components/schemas/Category" }], "nullable": true }
        }
      },

      "ProductListResponse": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/Product" } },
          "meta": { "$ref": "#/components/schemas/Meta" }
        }
      },

      "NewProductInput": {
        "type": "object",
        "required": ["name", "priceCents"],
        "properties": {
          "name": { "type": "string", "example": "Pizza 4 Fromages" },
          "priceCents": { "type": "integer", "example": 1250 },
          "description": { "type": "string", "example": "Mozzarella, chèvre, bleu, parmesan" },
          "categoryId": { "type": "string", "nullable": true, "example": "c_pizza" }
        }
      },

      "UpdateProductInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Pizza Reine" },
          "priceCents": { "type": "integer", "example": 1190 },
          "description": { "type": "string", "nullable": true, "example": "Jambon, champignons, mozzarella" },
          "categoryId": { "type": "string", "nullable": true, "example": "c_pizza" }
        }
      },

      "RegisterInput": {
        "type": "object",
        "required": ["email", "password", "fullName"],
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "minLength": 6 },
          "fullName": { "type": "string", "minLength": 2 }
        }
      },

      "LoginInput": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "minLength": 6 }
        }
      },

      "PublicUser": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "u_ab12cd34" },
          "email": { "type": "string", "example": "alice@example.com" },
          "fullName": { "type": "string", "example": "Alice Dupont" },
          "role": { "type": "string", "enum": ["USER", "ADMIN"], "example": "USER" }
        }
      },

      "PublicUserExtended": {
        "allOf": [
          { "$ref": "#/components/schemas/PublicUser" },
          {
            "type": "object",
            "properties": {
              "createdAt": { "type": "string", "format": "date-time" },
              "updatedAt": { "type": "string", "format": "date-time" }
            }
          }
        ]
      },

      "AuthToken": {
        "type": "object",
        "properties": { "accessToken": { "type": "string", "description": "Jeton d’accès (JWT)" } }
      },

      "CartItem": {
        "type": "object",
        "required": ["id", "productId", "name", "unitPriceCents", "quantity"],
        "properties": {
          "id": { "type": "string", "example": "ci_x1y2z3a4" },
          "productId": { "type": "string", "example": "p_abc123" },
          "name": { "type": "string", "example": "Pizza Pepperoni" },
          "unitPriceCents": { "type": "integer", "example": 1100 },
          "quantity": { "type": "integer", "example": 2 }
        }
      },

      "Cart": {
        "type": "object",
        "required": ["id", "items", "totalCents"],
        "properties": {
          "id": { "type": "string", "example": "cart_u_ab12cd34" },
          "items": { "type": "array", "items": { "$ref": "#/components/schemas/CartItem" } },
          "totalCents": { "type": "integer", "example": 2200 }
        }
      },

      "AddCartItemInput": {
        "type": "object",
        "required": ["productId", "quantity"],
        "properties": {
          "productId": { "type": "string", "example": "p_abc123" },
          "quantity": { "type": "integer", "minimum": 1, "maximum": 99, "example": 2 }
        }
      },

      "UpdateCartItemInput": {
        "type": "object",
        "required": ["quantity"],
        "properties": { "quantity": { "type": "integer", "minimum": 0, "maximum": 99, "example": 3 } }
      },

      "CheckoutStartInput": {
        "type": "object",
        "required": ["addressLine", "city", "postalCode", "phone"],
        "properties": {
          "addressLine": { "type": "string", "example": "12 rue de la République" },
          "city": { "type": "string", "example": "Paris" },
          "postalCode": { "type": "string", "example": "75001" },
          "phone": { "type": "string", "example": "+33601020304" }
        }
      },

      "CheckoutStartResponse": {
        "type": "object",
        "required": ["orderId", "clientSecret", "paymentIntentId"],
        "properties": {
          "orderId": { "type": "string", "example": "o_89vkuh63" },
          "clientSecret": { "type": "string", "example": "pi_3SIV6f..._secret_..." },
          "paymentIntentId": { "type": "string", "example": "pi_3SIV6fPDmY57KJ5r0uGb1jdZ" }
        }
      },

      "OrderItem": {
        "type": "object",
        "required": ["id", "productId", "name", "unitPriceCents", "quantity"],
        "properties": {
          "id": { "type": "string", "example": "oi_123" },
          "productId": { "type": "string", "example": "p_abc123" },
          "name": { "type": "string", "example": "Pizza Margherita" },
          "unitPriceCents": { "type": "integer", "example": 950 },
          "quantity": { "type": "integer", "example": 2 }
        }
      },

      "Payment": {
        "type": "object",
        "nullable": true,
        "properties": {
          "id": { "type": "string", "example": "pay_abc123" },
          "orderId": { "type": "string", "example": "o_abc123" },
          "provider": { "type": "string", "example": "stripe" },
          "status": { "type": "string", "example": "succeeded" },
          "intentId": { "type": "string", "example": "pi_3SIV6f..." },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },

      "Order": {
        "type": "object",
        "required": ["id", "userId", "status", "totalCents", "items", "createdAt", "updatedAt"],
        "properties": {
          "id": { "type": "string", "example": "o_abc123" },
          "userId": { "type": "string", "example": "u_ab12cd34" },
          "status": { "type": "string", "enum": ["PENDING", "PAID", "FAILED", "CANCELLED"], "example": "PAID" },
          "totalCents": { "type": "integer", "example": 2450 },
          "stripePaymentIntentId": { "type": "string", "nullable": true, "example": "pi_3SIV6f..." },
          "items": { "type": "array", "items": { "$ref": "#/components/schemas/OrderItem" } },
          "payment": { "$ref": "#/components/schemas/Payment" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },

      "AdminOrder": {
        "allOf": [
          { "$ref": "#/components/schemas/Order" },
          {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "example": "u_ab12cd34" },
                  "email": { "type": "string", "example": "alice@example.com" },
                  "fullName": { "type": "string", "example": "Alice Dupont" }
                }
              }
            }
          }
        ]
      }
    }
  }
}